/// <reference types="node" />
import { PrismaClient } from '../src/generated/prisma';
import * as bcrypt from 'bcryptjs';

const prisma = new PrismaClient();

async function main() {
    console.log('üå± B·∫Øt ƒë·∫ßu seed d·ªØ li·ªáu...');

    // ============================================
    // X√ìA D·ªÆ LI·ªÜU C≈®
    // ============================================
    console.log('üóëÔ∏è  X√≥a d·ªØ li·ªáu c≈©...');
    await prisma.payment.deleteMany();
    await prisma.billItem.deleteMany();
    await prisma.bill.deleteMany();
    await prisma.kitchenOrder.deleteMany();
    await prisma.orderItem.deleteMany();
    await prisma.order.deleteMany();
    await prisma.reservation.deleteMany();
    await prisma.restaurantTable.deleteMany();
    await prisma.menuItem.deleteMany();
    await prisma.category.deleteMany();
    await prisma.staff.deleteMany();
    await prisma.account.deleteMany();

    // ============================================
    // T·∫†O T√ÄI KHO·∫¢N V√Ä NH√ÇN VI√äN
    // ============================================
    console.log('üë§ T·∫°o t√†i kho·∫£n v√† nh√¢n vi√™n...');

    // M·∫≠t kh·∫©u: admin123 (ƒë√£ ƒë∆∞·ª£c hash)
    const hashedPassword = await bcrypt.hash('admin123', 10);

    const adminAccount = await prisma.account.create({
        data: {
            username: 'admin',
            email: 'admin@restaurant.com',
            phoneNumber: '0901234567',
            password: hashedPassword,
            isActive: true,
        },
    });

    const managerAccount = await prisma.account.create({
        data: {
            username: 'manager01',
            email: 'manager@restaurant.com',
            phoneNumber: '0901234568',
            password: hashedPassword,
            isActive: true,
        },
    });

    const waiter1Account = await prisma.account.create({
        data: {
            username: 'waiter01',
            email: 'waiter1@restaurant.com',
            phoneNumber: '0901234569',
            password: hashedPassword,
            isActive: true,
        },
    });

    const waiter2Account = await prisma.account.create({
        data: {
            username: 'waiter02',
            email: 'waiter2@restaurant.com',
            phoneNumber: '0901234570',
            password: hashedPassword,
            isActive: true,
        },
    });

    const chef1Account = await prisma.account.create({
        data: {
            username: 'chef01',
            email: 'chef1@restaurant.com',
            phoneNumber: '0901234571',
            password: hashedPassword,
            isActive: true,
        },
    });

    const chef2Account = await prisma.account.create({
        data: {
            username: 'chef02',
            email: 'chef2@restaurant.com',
            phoneNumber: '0901234572',
            password: hashedPassword,
            isActive: true,
        },
    });

    const cashierAccount = await prisma.account.create({
        data: {
            username: 'cashier01',
            email: 'cashier@restaurant.com',
            phoneNumber: '0901234573',
            password: hashedPassword,
            isActive: true,
        },
    });

    // T·∫°o nh√¢n vi√™n
    await prisma.staff.create({
        data: {
            accountId: adminAccount.accountId,
            fullName: 'Nguy·ªÖn VƒÉn Admin',
            address: '123 ƒê∆∞·ªùng L√™ L·ª£i, Q1, TP.HCM',
            dateOfBirth: new Date('1985-01-15'),
            hireDate: new Date('2020-01-01'),
            salary: 25000000,
            role: 'admin',
            isActive: true,
        },
    });

    await prisma.staff.create({
        data: {
            accountId: managerAccount.accountId,
            fullName: 'Tr·∫ßn Th·ªã Manager',
            address: '456 ƒê∆∞·ªùng Nguy·ªÖn Hu·ªá, Q1, TP.HCM',
            dateOfBirth: new Date('1988-05-20'),
            hireDate: new Date('2020-03-01'),
            salary: 20000000,
            role: 'manager',
            isActive: true,
        },
    });

    await prisma.staff.create({
        data: {
            accountId: waiter1Account.accountId,
            fullName: 'L√™ VƒÉn Waiter 1',
            address: '789 ƒê∆∞·ªùng Pasteur, Q3, TP.HCM',
            dateOfBirth: new Date('1995-08-10'),
            hireDate: new Date('2021-06-15'),
            salary: 8000000,
            role: 'waiter',
            isActive: true,
        },
    });

    await prisma.staff.create({
        data: {
            accountId: waiter2Account.accountId,
            fullName: 'Ph·∫°m Th·ªã Waiter 2',
            address: '321 ƒê∆∞·ªùng V√µ VƒÉn T·∫ßn, Q3, TP.HCM',
            dateOfBirth: new Date('1996-12-25'),
            hireDate: new Date('2021-07-01'),
            salary: 8000000,
            role: 'waiter',
            isActive: true,
        },
    });

    await prisma.staff.create({
        data: {
            accountId: chef1Account.accountId,
            fullName: 'Ho√†ng VƒÉn Chef 1',
            address: '654 ƒê∆∞·ªùng Hai B√† Tr∆∞ng, Q1, TP.HCM',
            dateOfBirth: new Date('1990-03-30'),
            hireDate: new Date('2020-02-15'),
            salary: 15000000,
            role: 'chef',
            isActive: true,
        },
    });

    await prisma.staff.create({
        data: {
            accountId: chef2Account.accountId,
            fullName: 'ƒê·∫∑ng Th·ªã Chef 2',
            address: '987 ƒê∆∞·ªùng C√°ch M·∫°ng Th√°ng 8, Q3, TP.HCM',
            dateOfBirth: new Date('1992-07-18'),
            hireDate: new Date('2020-05-20'),
            salary: 14000000,
            role: 'chef',
            isActive: true,
        },
    });

    await prisma.staff.create({
        data: {
            accountId: cashierAccount.accountId,
            fullName: 'V√µ VƒÉn Cashier',
            address: '147 ƒê∆∞·ªùng L√Ω Th∆∞·ªùng Ki·ªát, Q10, TP.HCM',
            dateOfBirth: new Date('1994-11-05'),
            hireDate: new Date('2021-01-10'),
            salary: 9000000,
            role: 'cashier',
            isActive: true,
        },
    });

    // ============================================
    // T·∫†O DANH M·ª§C
    // ============================================
    console.log('üìã T·∫°o danh m·ª•c...');

    const categories = await Promise.all([
        prisma.category.create({
            data: {
                categoryName: 'Khai v·ªã',
                description: 'M√≥n ƒÉn khai v·ªã nh·∫π nh√†ng',
                displayOrder: 1,
                isActive: true,
            },
        }),
        prisma.category.create({
            data: {
                categoryName: 'S√∫p',
                description: 'C√°c lo·∫°i s√∫p n√≥ng h·ªïi',
                displayOrder: 2,
                isActive: true,
            },
        }),
        prisma.category.create({
            data: {
                categoryName: 'Salad',
                description: 'Salad t∆∞∆°i ngon',
                displayOrder: 3,
                isActive: true,
            },
        }),
        prisma.category.create({
            data: {
                categoryName: 'M√≥n ch√≠nh',
                description: 'C√°c m√≥n ƒÉn ch√≠nh phong ph√∫',
                displayOrder: 4,
                isActive: true,
            },
        }),
        prisma.category.create({
            data: {
                categoryName: 'H·∫£i s·∫£n',
                description: 'H·∫£i s·∫£n t∆∞∆°i s·ªëng',
                displayOrder: 5,
                isActive: true,
            },
        }),
        prisma.category.create({
            data: {
                categoryName: 'M√¨ & C∆°m',
                description: 'M√≥n c∆°m v√† m√¨ ƒë·∫∑c s·∫£n',
                displayOrder: 6,
                isActive: true,
            },
        }),
        prisma.category.create({
            data: {
                categoryName: 'Tr√°ng mi·ªáng',
                description: 'C√°c m√≥n tr√°ng mi·ªáng ng·ªçt ng√†o',
                displayOrder: 7,
                isActive: true,
            },
        }),
        prisma.category.create({
            data: {
                categoryName: 'ƒê·ªì u·ªëng',
                description: 'N∆∞·ªõc gi·∫£i kh√°t',
                displayOrder: 8,
                isActive: true,
            },
        }),
        prisma.category.create({
            data: {
                categoryName: 'R∆∞·ª£u & Bia',
                description: 'ƒê·ªì u·ªëng c√≥ c·ªìn',
                displayOrder: 9,
                isActive: true,
            },
        }),
    ]);

    // ============================================
    // T·∫†O M√ìN ƒÇN
    // ============================================
    console.log('üçΩÔ∏è  T·∫°o m√≥n ƒÉn...');

    // Khai v·ªã
    await prisma.menuItem.createMany({
        data: [
            {
                itemCode: 'KV001',
                itemName: 'G·ªèi cu·ªën t√¥m th·ªãt',
                categoryId: categories[0].categoryId,
                price: 45000,
                cost: 20000,
                description: 'G·ªèi cu·ªën t∆∞∆°i v·ªõi t√¥m, th·ªãt v√† rau th∆°m',
                isAvailable: true,
                preparationTime: 5,
                spicyLevel: 0,
                isVegetarian: false,
                calories: 150,
            },
            {
                itemCode: 'KV002',
                itemName: 'Ch·∫£ gi√≤ chi√™n',
                categoryId: categories[0].categoryId,
                price: 50000,
                cost: 22000,
                description: 'Ch·∫£ gi√≤ gi√≤n r·ª•m v·ªõi nh√¢n th·ªãt',
                isAvailable: true,
                preparationTime: 10,
                spicyLevel: 0,
                isVegetarian: false,
                calories: 200,
            },
            {
                itemCode: 'KV003',
                itemName: 'Nem n∆∞·ªõng',
                categoryId: categories[0].categoryId,
                price: 55000,
                cost: 25000,
                description: 'Nem n∆∞·ªõng th∆°m ngon v·ªõi n∆∞·ªõc ch·∫•m ƒë·∫∑c bi·ªát',
                isAvailable: true,
                preparationTime: 15,
                spicyLevel: 1,
                isVegetarian: false,
                calories: 180,
            },
            {
                itemCode: 'KV004',
                itemName: 'G·ªèi cu·ªën chay',
                categoryId: categories[0].categoryId,
                price: 40000,
                cost: 18000,
                description: 'G·ªèi cu·ªën chay v·ªõi ƒë·∫≠u h≈© v√† rau c·ªß',
                isAvailable: true,
                preparationTime: 5,
                spicyLevel: 0,
                isVegetarian: true,
                calories: 120,
            },
        ],
    });

    // S√∫p
    await prisma.menuItem.createMany({
        data: [
            {
                itemCode: 'SP001',
                itemName: 'S√∫p cua',
                categoryId: categories[1].categoryId,
                price: 65000,
                cost: 30000,
                description: 'S√∫p cua th·ªãt th∆°m ngon',
                isAvailable: true,
                preparationTime: 15,
                spicyLevel: 0,
                isVegetarian: false,
            },
            {
                itemCode: 'SP002',
                itemName: 'S√∫p h·∫£i s·∫£n',
                categoryId: categories[1].categoryId,
                price: 75000,
                cost: 35000,
                description: 'S√∫p h·∫£i s·∫£n t∆∞∆°i ngon',
                isAvailable: true,
                preparationTime: 15,
                spicyLevel: 0,
                isVegetarian: false,
            },
            {
                itemCode: 'SP003',
                itemName: 'S√∫p g√† n·∫•m',
                categoryId: categories[1].categoryId,
                price: 60000,
                cost: 28000,
                description: 'S√∫p g√† n·∫•m b·ªï d∆∞·ª°ng',
                isAvailable: true,
                preparationTime: 15,
                spicyLevel: 0,
                isVegetarian: false,
            },
        ],
    });

    // Salad
    await prisma.menuItem.createMany({
        data: [
            {
                itemCode: 'SL001',
                itemName: 'Salad Caesar',
                categoryId: categories[2].categoryId,
                price: 85000,
                cost: 40000,
                description: 'Salad Caesar truy·ªÅn th·ªëng',
                isAvailable: true,
                preparationTime: 8,
                isVegetarian: false,
            },
            {
                itemCode: 'SL002',
                itemName: 'Salad rau c·ªß',
                categoryId: categories[2].categoryId,
                price: 70000,
                cost: 35000,
                description: 'Salad rau c·ªß t∆∞∆°i m√°t',
                isAvailable: true,
                preparationTime: 8,
                isVegetarian: true,
            },
            {
                itemCode: 'SL003',
                itemName: 'Salad t√¥m',
                categoryId: categories[2].categoryId,
                price: 95000,
                cost: 45000,
                description: 'Salad v·ªõi t√¥m t∆∞∆°i',
                isAvailable: true,
                preparationTime: 10,
                isVegetarian: false,
            },
        ],
    });

    // M√≥n ch√≠nh
    await prisma.menuItem.createMany({
        data: [
            {
                itemCode: 'MC001',
                itemName: 'B√≤ l√∫c l·∫Øc',
                categoryId: categories[3].categoryId,
                price: 185000,
                cost: 90000,
                description: 'Th·ªãt b√≤ l√∫c l·∫Øc v·ªõi khoai t√¢y chi√™n',
                isAvailable: true,
                preparationTime: 20,
                spicyLevel: 1,
            },
            {
                itemCode: 'MC002',
                itemName: 'G√† n∆∞·ªõng m·∫≠t ong',
                categoryId: categories[3].categoryId,
                price: 145000,
                cost: 70000,
                description: 'G√† n∆∞·ªõng m·∫≠t ong th∆°m ngon',
                isAvailable: true,
                preparationTime: 25,
                spicyLevel: 0,
            },
            {
                itemCode: 'MC003',
                itemName: 'S∆∞·ªùn n∆∞·ªõng BBQ',
                categoryId: categories[3].categoryId,
                price: 165000,
                cost: 80000,
                description: 'S∆∞·ªùn n∆∞·ªõng s·ªët BBQ',
                isAvailable: true,
                preparationTime: 30,
                spicyLevel: 1,
            },
            {
                itemCode: 'MC004',
                itemName: 'B√≠t t·∫øt b√≤ √öc',
                categoryId: categories[3].categoryId,
                price: 285000,
                cost: 140000,
                description: 'B√≠t t·∫øt b√≤ √öc cao c·∫•p',
                isAvailable: true,
                preparationTime: 25,
                spicyLevel: 0,
            },
            {
                itemCode: 'MC005',
                itemName: 'V·ªãt quay B·∫Øc Kinh',
                categoryId: categories[3].categoryId,
                price: 195000,
                cost: 95000,
                description: 'V·ªãt quay ki·ªÉu B·∫Øc Kinh',
                isAvailable: true,
                preparationTime: 35,
                spicyLevel: 0,
            },
        ],
    });

    // H·∫£i s·∫£n
    await prisma.menuItem.createMany({
        data: [
            {
                itemCode: 'HS001',
                itemName: 'T√¥m h√πm n∆∞·ªõng',
                categoryId: categories[4].categoryId,
                price: 550000,
                cost: 280000,
                description: 'T√¥m h√πm n∆∞·ªõng b∆° t·ªèi',
                isAvailable: true,
                preparationTime: 30,
                spicyLevel: 0,
            },
            {
                itemCode: 'HS002',
                itemName: 'Cua rang me',
                categoryId: categories[4].categoryId,
                price: 285000,
                cost: 140000,
                description: 'Cua rang me ƒë·∫∑c bi·ªát',
                isAvailable: true,
                preparationTime: 25,
                spicyLevel: 2,
            },
            {
                itemCode: 'HS003',
                itemName: 'C√° h·ªìi n∆∞·ªõng',
                categoryId: categories[4].categoryId,
                price: 245000,
                cost: 120000,
                description: 'C√° h·ªìi n∆∞·ªõng s·ªët teriyaki',
                isAvailable: true,
                preparationTime: 20,
                spicyLevel: 0,
            },
            {
                itemCode: 'HS004',
                itemName: 'M·ª±c x√†o sa t·∫ø',
                categoryId: categories[4].categoryId,
                price: 165000,
                cost: 80000,
                description: 'M·ª±c t∆∞∆°i x√†o sa t·∫ø cay',
                isAvailable: true,
                preparationTime: 15,
                spicyLevel: 3,
            },
            {
                itemCode: 'HS005',
                itemName: 'Ngh√™u h·∫•p s·∫£',
                categoryId: categories[4].categoryId,
                price: 145000,
                cost: 70000,
                description: 'Ngh√™u h·∫•p s·∫£ cay',
                isAvailable: true,
                preparationTime: 15,
                spicyLevel: 2,
            },
        ],
    });

    // M√¨ & C∆°m
    await prisma.menuItem.createMany({
        data: [
            {
                itemCode: 'MR001',
                itemName: 'C∆°m chi√™n D∆∞∆°ng Ch√¢u',
                categoryId: categories[5].categoryId,
                price: 75000,
                cost: 35000,
                description: 'C∆°m chi√™n truy·ªÅn th·ªëng',
                isAvailable: true,
                preparationTime: 12,
                spicyLevel: 0,
            },
            {
                itemCode: 'MR002',
                itemName: 'Ph·ªü b√≤ ƒë·∫∑c bi·ªát',
                categoryId: categories[5].categoryId,
                price: 85000,
                cost: 40000,
                description: 'Ph·ªü b√≤ t√°i n·∫°m g·∫ßu g√¢n',
                isAvailable: true,
                preparationTime: 15,
                spicyLevel: 0,
            },
            {
                itemCode: 'MR003',
                itemName: 'M√¨ x√†o h·∫£i s·∫£n',
                categoryId: categories[5].categoryId,
                price: 95000,
                cost: 45000,
                description: 'M√¨ x√†o v·ªõi h·∫£i s·∫£n t∆∞∆°i',
                isAvailable: true,
                preparationTime: 15,
                spicyLevel: 1,
            },
            {
                itemCode: 'MR004',
                itemName: 'C∆°m g√† H·∫£i Nam',
                categoryId: categories[5].categoryId,
                price: 85000,
                cost: 40000,
                description: 'C∆°m g√† H·∫£i Nam ƒë·∫∑c bi·ªát',
                isAvailable: true,
                preparationTime: 20,
                spicyLevel: 0,
            },
            {
                itemCode: 'MR005',
                itemName: 'B√∫n b√≤ Hu·∫ø',
                categoryId: categories[5].categoryId,
                price: 80000,
                cost: 38000,
                description: 'B√∫n b√≤ Hu·∫ø cay',
                isAvailable: true,
                preparationTime: 15,
                spicyLevel: 3,
            },
        ],
    });

    // Tr√°ng mi·ªáng
    await prisma.menuItem.createMany({
        data: [
            {
                itemCode: 'TM001',
                itemName: 'B√°nh flan caramel',
                categoryId: categories[6].categoryId,
                price: 35000,
                cost: 15000,
                description: 'B√°nh flan caramel m·ªÅm m·ªãn',
                isAvailable: true,
                preparationTime: 5,
                isVegetarian: true,
                calories: 180,
            },
            {
                itemCode: 'TM002',
                itemName: 'Kem d·ª´a',
                categoryId: categories[6].categoryId,
                price: 40000,
                cost: 18000,
                description: 'Kem d·ª´a t∆∞∆°i m√°t',
                isAvailable: true,
                preparationTime: 5,
                isVegetarian: true,
                calories: 200,
            },
            {
                itemCode: 'TM003',
                itemName: 'Ch√® ba m√†u',
                categoryId: categories[6].categoryId,
                price: 30000,
                cost: 12000,
                description: 'Ch√® ba m√†u truy·ªÅn th·ªëng',
                isAvailable: true,
                preparationTime: 5,
                isVegetarian: true,
                calories: 150,
            },
            {
                itemCode: 'TM004',
                itemName: 'Tiramisu',
                categoryId: categories[6].categoryId,
                price: 55000,
                cost: 25000,
                description: 'Tiramisu √ù ƒë·∫∑c bi·ªát',
                isAvailable: true,
                preparationTime: 5,
                isVegetarian: true,
                calories: 250,
            },
        ],
    });

    // ƒê·ªì u·ªëng
    await prisma.menuItem.createMany({
        data: [
            {
                itemCode: 'DU001',
                itemName: 'Tr√† ƒë√°',
                categoryId: categories[7].categoryId,
                price: 10000,
                cost: 3000,
                description: 'Tr√° ƒë√° m√°t l·∫°nh',
                isAvailable: true,
                preparationTime: 2,
                isVegetarian: true,
                calories: 0,
            },
            {
                itemCode: 'DU002',
                itemName: 'N∆∞·ªõc chanh',
                categoryId: categories[7].categoryId,
                price: 20000,
                cost: 8000,
                description: 'N∆∞·ªõc chanh t∆∞∆°i',
                isAvailable: true,
                preparationTime: 3,
                isVegetarian: true,
                calories: 50,
            },
            {
                itemCode: 'DU003',
                itemName: 'C√† ph√™ ƒëen',
                categoryId: categories[7].categoryId,
                price: 25000,
                cost: 10000,
                description: 'C√† ph√™ ƒëen truy·ªÅn th·ªëng',
                isAvailable: true,
                preparationTime: 5,
                isVegetarian: true,
                calories: 5,
            },
            {
                itemCode: 'DU004',
                itemName: 'C√† ph√™ s·ªØa',
                categoryId: categories[7].categoryId,
                price: 28000,
                cost: 12000,
                description: 'C√† ph√™ s·ªØa ƒë√°',
                isAvailable: true,
                preparationTime: 5,
                isVegetarian: true,
                calories: 120,
            },
            {
                itemCode: 'DU005',
                itemName: 'N∆∞·ªõc cam',
                categoryId: categories[7].categoryId,
                price: 35000,
                cost: 15000,
                description: 'N∆∞·ªõc cam v·∫Øt t∆∞∆°i',
                isAvailable: true,
                preparationTime: 5,
                isVegetarian: true,
                calories: 110,
            },
            {
                itemCode: 'DU006',
                itemName: 'Sinh t·ªë b∆°',
                categoryId: categories[7].categoryId,
                price: 45000,
                cost: 20000,
                description: 'Sinh t·ªë b∆° s√°nh m·ªãn',
                isAvailable: true,
                preparationTime: 5,
                isVegetarian: true,
                calories: 220,
            },
            {
                itemCode: 'DU007',
                itemName: 'Tr√† s·ªØa truy·ªÅn th·ªëng',
                categoryId: categories[7].categoryId,
                price: 38000,
                cost: 16000,
                description: 'Tr√† s·ªØa truy·ªÅn th·ªëng th∆°m ngon',
                isAvailable: true,
                preparationTime: 5,
                isVegetarian: true,
                calories: 180,
            },
        ],
    });

    // R∆∞·ª£u & Bia
    await prisma.menuItem.createMany({
        data: [
            {
                itemCode: 'RB001',
                itemName: 'Bia Heineken',
                categoryId: categories[8].categoryId,
                price: 35000,
                cost: 18000,
                description: 'Bia Heineken lon',
                isAvailable: true,
                preparationTime: 2,
                isVegetarian: true,
                calories: 150,
            },
            {
                itemCode: 'RB002',
                itemName: 'Bia Tiger',
                categoryId: categories[8].categoryId,
                price: 30000,
                cost: 15000,
                description: 'Bia Tiger lon',
                isAvailable: true,
                preparationTime: 2,
                isVegetarian: true,
                calories: 140,
            },
            {
                itemCode: 'RB003',
                itemName: 'Bia S√†i G√≤n',
                categoryId: categories[8].categoryId,
                price: 25000,
                cost: 12000,
                description: 'Bia S√†i G√≤n lon',
                isAvailable: true,
                preparationTime: 2,
                isVegetarian: true,
                calories: 135,
            },
            {
                itemCode: 'RB004',
                itemName: 'R∆∞·ª£u vang ƒë·ªè',
                categoryId: categories[8].categoryId,
                price: 450000,
                cost: 250000,
                description: 'R∆∞·ª£u vang ƒë·ªè nh·∫≠p kh·∫©u',
                isAvailable: true,
                preparationTime: 3,
                isVegetarian: true,
                calories: 600,
            },
            {
                itemCode: 'RB005',
                itemName: 'R∆∞·ª£u vang tr·∫Øng',
                categoryId: categories[8].categoryId,
                price: 420000,
                cost: 230000,
                description: 'R∆∞·ª£u vang tr·∫Øng nh·∫≠p kh·∫©u',
                isAvailable: true,
                preparationTime: 3,
                isVegetarian: true,
                calories: 580,
            },
        ],
    });

    // ============================================
    // T·∫†O B√ÄN ƒÇN
    // ============================================
    console.log('ü™ë T·∫°o b√†n ƒÉn...');

    await prisma.restaurantTable.createMany({
        data: [
            // T·∫ßng 1 - Khu v·ª±c ch√≠nh
            { tableNumber: 'T01', tableName: 'B√†n 1', capacity: 4, minCapacity: 2, floor: 1, section: 'Indoor', status: 'available', isActive: true },
            { tableNumber: 'T02', tableName: 'B√†n 2', capacity: 4, minCapacity: 2, floor: 1, section: 'Indoor', status: 'available', isActive: true },
            { tableNumber: 'T03', tableName: 'B√†n 3', capacity: 6, minCapacity: 4, floor: 1, section: 'Indoor', status: 'available', isActive: true },
            { tableNumber: 'T04', tableName: 'B√†n 4', capacity: 2, minCapacity: 1, floor: 1, section: 'Indoor', status: 'available', isActive: true },
            { tableNumber: 'T05', tableName: 'B√†n 5', capacity: 4, minCapacity: 2, floor: 1, section: 'Indoor', status: 'available', isActive: true },
            { tableNumber: 'T06', tableName: 'B√†n 6', capacity: 8, minCapacity: 6, floor: 1, section: 'Indoor', status: 'available', isActive: true },

            // T·∫ßng 1 - Khu v·ª±c ngo√†i tr·ªùi
            { tableNumber: 'O01', tableName: 'Outdoor 1', capacity: 4, minCapacity: 2, floor: 1, section: 'Outdoor', status: 'available', isActive: true },
            { tableNumber: 'O02', tableName: 'Outdoor 2', capacity: 4, minCapacity: 2, floor: 1, section: 'Outdoor', status: 'available', isActive: true },
            { tableNumber: 'O03', tableName: 'Outdoor 3', capacity: 6, minCapacity: 4, floor: 1, section: 'Outdoor', status: 'available', isActive: true },

            // T·∫ßng 2 - Khu VIP
            { tableNumber: 'V01', tableName: 'VIP 1', capacity: 10, minCapacity: 6, floor: 2, section: 'VIP', status: 'available', isActive: true },
            { tableNumber: 'V02', tableName: 'VIP 2', capacity: 12, minCapacity: 8, floor: 2, section: 'VIP', status: 'available', isActive: true },
            { tableNumber: 'V03', tableName: 'VIP 3', capacity: 8, minCapacity: 6, floor: 2, section: 'VIP', status: 'available', isActive: true },

            // T·∫ßng 2 - Khu v∆∞·ªùn
            { tableNumber: 'G01', tableName: 'Garden 1', capacity: 4, minCapacity: 2, floor: 2, section: 'Garden', status: 'available', isActive: true },
            { tableNumber: 'G02', tableName: 'Garden 2', capacity: 6, minCapacity: 4, floor: 2, section: 'Garden', status: 'available', isActive: true },
            { tableNumber: 'G03', tableName: 'Garden 3', capacity: 4, minCapacity: 2, floor: 2, section: 'Garden', status: 'available', isActive: true },
        ],
    });

    // ============================================
    // T·∫†O ƒê·∫∂T B√ÄN M·∫™U
    // ============================================
    console.log('üìÖ T·∫°o ƒë·∫∑t b√†n m·∫´u...');

    const tables = await prisma.restaurantTable.findMany();

    const tomorrow = new Date();
    tomorrow.setDate(tomorrow.getDate() + 1);

    await prisma.reservation.create({
        data: {
            customerName: 'Nguy·ªÖn VƒÉn A',
            phoneNumber: '0912345678',
            email: 'nguyenvana@example.com',
            tableId: tables[0]!.tableId,
            reservationDate: tomorrow,
            reservationTime: new Date('2024-01-01T18:00:00'),
            duration: 120,
            headCount: 4,
            specialRequest: 'C·∫ßn b√†n g·∫ßn c·ª≠a s·ªï',
            depositAmount: 200000,
            status: 'confirmed',
        },
    });

    await prisma.reservation.create({
        data: {
            customerName: 'Tr·∫ßn Th·ªã B',
            phoneNumber: '0923456789',
            email: 'tranthib@example.com',
            tableId: tables[9]!.tableId, // VIP table
            reservationDate: tomorrow,
            reservationTime: new Date('2024-01-01T19:00:00'),
            duration: 180,
            headCount: 8,
            specialRequest: 'Ti·ªác sinh nh·∫≠t, c·∫ßn b√°nh kem',
            depositAmount: 500000,
            status: 'confirmed',
        },
    });

    console.log('‚úÖ Seed d·ªØ li·ªáu ho√†n t·∫•t!');
    console.log(`
üìä T·ªïng k·∫øt:
- ${await prisma.account.count()} t√†i kho·∫£n
- ${await prisma.staff.count()} nh√¢n vi√™n
- ${await prisma.category.count()} danh m·ª•c
- ${await prisma.menuItem.count()} m√≥n ƒÉn
- ${await prisma.restaurantTable.count()} b√†n ƒÉn
- ${await prisma.reservation.count()} ƒë·∫∑t b√†n

üîë Th√¥ng tin ƒëƒÉng nh·∫≠p:
Username: admin, manager01, waiter01, waiter02, chef01, chef02, cashier01
Password: admin123 (cho t·∫•t c·∫£ t√†i kho·∫£n)
  `);
}

main()
    .catch((e) => {
        console.error('‚ùå L·ªói khi seed d·ªØ li·ªáu:', e);
        process.exit(1);
    })
    .finally(async () => {
        await prisma.$disconnect();
    });
